@inherits LayoutComponentBase
@implements IDisposable
@inject CartService CartService
@using Microsoft.AspNetCore.Components.Authorization
@using Web.Models
@using Web.Services

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
            <a href="/cart">View Cart (@Counts)</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
        <AuthorizeView>
    <Authorized>
        <a href="/admin" class="nav-link">
            <span class="bi bi-shield-lock-fill"></span> Admin
        </a>
    </Authorized>
    <NotAuthorized>
        <a href="/admin/login" class="nav-link">
            <span class="bi bi-box-arrow-in-right"></span> Admin Login
        </a>
    </NotAuthorized>
</AuthorizeView>
    </main>
</div>

@code {
    private int Counts = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadCartCount();
        CartService.OnChange += HandleCartChanged;
    }

    private async Task LoadCartCount()
    {
        var cartItems = await CartService.GetCartItemsAsync();
        Counts = cartItems?.Sum(item => item.Quantity) ?? 0; // Sum quantities for total items
        StateHasChanged();
    }

    private async void HandleCartChanged()
    {
        await LoadCartCount();
    }

    public void Dispose()
    {
        CartService.OnChange -= HandleCartChanged;
    }
}