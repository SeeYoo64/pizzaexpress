@inherits LayoutComponentBase
@implements IDisposable
@inject CartService CartService
@using Microsoft.AspNetCore.Components.Authorization
@using Web.Models
@using Web.Services
@inject NavigationManager NavManager

<div class="page">
    
    <main>
            <header>
                <div class="logo">PizzaExpress</div>
                <nav class="header-nav">
                    <a href="/menu" class="nav-link">Menu</a>

                    <div style="position:relative;display:inline-block;">
                        <div class="cart-container-nav">
                            <a href="/cart">
                                <i class="fas fa-shopping-cart"></i>
                                <span class="cart-badge">@Counts</span>
                            </a>
                        </div>
                    </div>
                    <AuthorizeView>
                        <Authorized>
                            <a href="/admin" class="nav-link">
                                <span class="bi bi-shield-lock-fill"></span> Admin
                            </a>
                        </Authorized>
                        <NotAuthorized>
                            <a href="/admin/login" class="nav-link">
                                <span class="bi bi-box-arrow-in-right"></span> Admin Login
                            </a>
                        </NotAuthorized>
                        <Authorized>
                            <button @onclick="Logout">Logout</button>
                        </Authorized>
                    </AuthorizeView>
                </nav>
            </header>
            
            @Body
    </main>
</div>

@code {
    private int Counts = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadCartCount();
        CartService.OnChange += HandleCartChanged;
    }

    private async Task LoadCartCount()
    {
        var cartItems = await CartService.GetCartItemsAsync();
        Counts = cartItems?.Sum(item => item.Quantity) ?? 0; // Sum quantities for total items
        StateHasChanged();
    }
    private void Logout()
    {
        NavManager.NavigateTo("/admin/login");
    }
    private async void HandleCartChanged()
    {
        await LoadCartCount();
    }

    public void Dispose()
    {
        CartService.OnChange -= HandleCartChanged;
    }
}