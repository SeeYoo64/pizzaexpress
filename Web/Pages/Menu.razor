@page "/menu"
@using Web.Models
@using Web.Services
@inject PizzasService PizzasService
@inject CartService CartService
@inject NavigationManager NavManager
@inject HttpClient Http


<section class="menu-header">
    <h2>Our Menu</h2>
</section>

<div class="menu-grid">
    @if (pizzas == null)
    {
        <p>Loading pizzas...</p>
    }
    else if (!pizzas.Any())
    {
        <p>No pizzas found.</p>
    }
    else
    {
        @foreach (var pizza in pizzas)
        {
            <div class="pizza-card" key="@pizza.Id">
                <img src="@GetPizzaImageUrl(pizza)" alt="@pizza.Name" class="pizza-image" />
                <div class="pizza-info">
                    <div>
                        <h3 class="pizza-title">@pizza.Name</h3>
                        <p class="pizza-description">@pizza.Description.Text</p>

                        <div class="pizza-meta">
                            <p class="pizza-price">Price: $@pizza.Price</p>
                            <p class="pizza-weight">Weight: @pizza.Description.Weight g</p>

                            <ul class="pizza-ingredients">
                                @foreach (var ingredient in pizza.Description.Ingredients.Take(5))
                                {
                                    <li>@ingredient</li>
                                }
                                @if (pizza.Description.Ingredients.Count > 5)
                                {
                                    <li>+ @(pizza.Description.Ingredients.Count - 5) more</li>
                                }
                            </ul>
                        </div>
                    </div>

                    <button class="add-to-cart-btn" @onclick="() => AddToCart(pizza)">Add to Cart</button>
                </div>
            </div>
        }
    }
</div>

@code {
    private Pizza[]? pizzas;

    protected override async Task OnInitializedAsync()
    {
        pizzas = await PizzasService.GetPizzasAsync();
    }

    private async void AddToCart(Pizza pizza)
    {
        await CartService.AddItemAsync(pizza);
        StateHasChanged();
    }
    private void Logout()
    {
        NavManager.NavigateTo("/admin/login");
    }
    private string GetPizzaImageUrl(Pizza pizza)
    {
        if (string.IsNullOrEmpty(pizza.PhotoPath) || pizza.PhotoPath == " ")
        return "/images/default-pizza.jpg"; 

        return new Uri(Http.BaseAddress, pizza.PhotoPath).AbsoluteUri;
    }
}